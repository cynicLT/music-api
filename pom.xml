<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/>
    </parent>

    <groupId>org.cynic</groupId>
    <artifactId>music-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>music-api</name>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>23</java.version>
        <hibernate.version>6.6.1.Final</hibernate.version>

        <maven.plugin.forbiddenapis.version>3.8</maven.plugin.forbiddenapis.version>
        <maven.plugin.jacoco.version>0.8.12</maven.plugin.jacoco.version>
        <maven.plugin.pitest.version>1.17.0</maven.plugin.pitest.version>
        <maven.plugin.pitest.goal>scmMutationCoverage</maven.plugin.pitest.goal>
        <maven.plugin.pitest.junit5.version>1.2.1</maven.plugin.pitest.junit5.version>
        <maven.plugin.owasp.version>11.0.0</maven.plugin.owasp.version>
        <maven.plugin.spotbugs.version>4.8.6.4</maven.plugin.spotbugs.version>
        <maven.plugin.findsecbugs.version>1.12.0</maven.plugin.findsecbugs.version>
        <maven.plugin.spell-check.version>1.0.0</maven.plugin.spell-check.version>
        <maven.plugin.editorconfig.version>0.1.3</maven.plugin.editorconfig.version>
        <maven.plugin.pmd.version>3.25.0</maven.plugin.pmd.version>
        <maven.plugin.asm.version>9.7.1</maven.plugin.asm.version>
        <maven.plugin.gitlog.version>1.14.0</maven.plugin.gitlog.version>

        <error.prone.version>2.22.0</error.prone.version>

        <mapstruct.version>1.6.2</mapstruct.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.17.0</commons-io.version>
        <resilience4j.version>2.2.0</resilience4j.version>

        <archunit.version>1.3.0</archunit.version>
        <instancio.version>5.0.2</instancio.version>
        <wiremock.version>3.9.1</wiremock.version>
    </properties>

    <profiles>
        <profile>
            <id>pipeline</id>
            <properties>
                <maven.plugin.pitest.goal>mutationCoverage</maven.plugin.pitest.goal>
            </properties>
        </profile>
    </profiles>

    <scm>
        <connection>scm:git:https://github.com/cynicLT/music-api</connection>
        <developerConnection>scm:git:https://github.com/cynicLT/music-api</developerConnection>
        <url>https://github.com/cynicLT/music-api</url>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-bom</artifactId>
                <version>${resilience4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>log4j-to-slf4j</artifactId>
                    <groupId>org.apache.logging.log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>micrometer-observation</artifactId>
                    <groupId>io.micrometer</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty.ee10.websocket</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.websocket</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>tomcat-embed-el</artifactId>
                    <groupId>org.apache.tomcat.embed</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jaxb-runtime</artifactId>
                    <groupId>org.glassfish.jaxb</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jakarta.inject-api</artifactId>
                    <groupId>jakarta.inject</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>micrometer-observation</artifactId>
                    <groupId>io.micrometer</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot3</artifactId>
        </dependency>

        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jaxb-api</artifactId>
                    <groupId>javax.xml.bind</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>android-json</artifactId>
                    <groupId>com.vaadin.external.google</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wiremock</groupId>
            <artifactId>wiremock-jetty12</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>byte-buddy</artifactId>
                    <groupId>net.bytebuddy</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.instancio</groupId>
            <artifactId>instancio-junit</artifactId>
            <version>${instancio.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.hibernate.orm.tooling</groupId>
                    <artifactId>hibernate-enhance-maven-plugin</artifactId>
                    <version>${hibernate.version}</version>
                    <configuration>
                        <enableAssociationManagement>true</enableAssociationManagement>
                        <enableDirtyTracking>true</enableDirtyTracking>
                        <enableLazyInitialization>true</enableLazyInitialization>
                        <enableExtendedEnhancement>false</enableExtendedEnhancement>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.ec4j.maven</groupId>
                    <artifactId>editorconfig-maven-plugin</artifactId>
                    <version>${maven.plugin.editorconfig.version}</version>
                    <configuration>
                        <backup>false</backup>
                        <excludeSubmodules>true</excludeSubmodules>
                        <failOnNoMatchingProperties>true</failOnNoMatchingProperties>
                        <failOnFormatViolation>true</failOnFormatViolation>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <excludes>
                            <exclud>repo/**</exclud>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.tomxiong</groupId>
                    <artifactId>spell-check-maven-plugin</artifactId>
                    <version>${maven.plugin.spell-check.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/*Test.java</exclude>
                            <exclude>**/*IT.java</exclude>
                        </excludes>
                        <customDictionaryFile>domain-dictionary.txt</customDictionaryFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven.plugin.pmd.version}</version>
                    <configuration>
                        <linkXRef>false</linkXRef>
                        <failOnViolation>true</failOnViolation>
                        <printFailingErrors>true</printFailingErrors>
                        <rulesets>
                            <ruleset>/category/java/bestpractices.xml</ruleset>
                            <ruleset>/category/java/security.xml</ruleset>
                            <ruleset>/category/java/multithreading.xml</ruleset>
                            <ruleset>/category/java/performance.xml</ruleset>
                        </rulesets>
                        <excludeRoots>
                            <excludeRoot>${project.build.directory}/generated-sources</excludeRoot>
                        </excludeRoots>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${maven.plugin.asm.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${maven.plugin.pitest.version}</version>
                    <configuration>
                        <targetClasses>
                            <param>org.cynic.music_api.**</param>
                        </targetClasses>
                        <targetTests>
                            <param>org.cynic.music_api.**</param>
                        </targetTests>
                        <excludedClasses>
                            <param>org.cynic.music_api.Application*</param>
                            <param>org.cynic.music_api.*Configuration*</param>
                            <param>org.cynic.music_api.domain.**</param>
                            <param>org.cynic.music_api.repository.**</param>
                            <param>org.cynic.music_api.Constant*</param>
                            <param>org.cynic.music_api.**.Abstract*</param>
                            <param>org.cynic.music_api.framework.**</param>
                        </excludedClasses>
                        <excludedTestClasses>
                            <param>org.cynic.music_api.architecture.**</param>
                        </excludedTestClasses>
                        <jvmArgs>
                            <jvmArg>-XX:+EnableDynamicAgentLoading</jvmArg>
                            <jvmArg>-Xshare:off</jvmArg>
                        </jvmArgs>
                        <threads>10</threads>
                        <verbose>false</verbose>
                        <mutationThreshold>80</mutationThreshold>
                        <timestampedReports>false</timestampedReports>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-junit5-plugin</artifactId>
                            <version>${maven.plugin.pitest.junit5.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${maven.plugin.spotbugs.version}</version>
                    <configuration>
                        <failOnError>true</failOnError>
                        <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <groups>unit</groups>
                        <useSystemClassLoader>true</useSystemClassLoader>
                        <parallel>all</parallel>
                        <threadCountSuites>10</threadCountSuites>
                        <perCoreThreadCount>true</perCoreThreadCount>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <argLine>@{argLine} -XX:+EnableDynamicAgentLoading -Xshare:off</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven.plugin.jacoco.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/Constant*</exclude>
                            <exclude>**/*Configuration*</exclude>
                            <exclude>**/*Properties*</exclude>
                            <exclude>**/Application*</exclude>
                            <exclude>**/domain/**</exclude>
                            <exclude>**/mapper/**</exclude>
                            <exclude>**/framework/**</exclude>
                            <exclude>**/repository/**</exclude>
                            <exclude>**/Abstract*</exclude>
                        </excludes>
                        <rules>
                            <rule>
                                <element>CLASS</element>
                                <limits>
                                    <limit>
                                        <counter>CLASS</counter>
                                        <value>MISSEDCOUNT</value>
                                        <maximum>0</maximum>
                                    </limit>
                                    <limit>
                                        <counter>LINE</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0.80</minimum>
                                    </limit>
                                    <limit>
                                        <counter>BRANCH</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>0.80</minimum>
                                    </limit>
                                </limits>
                            </rule>
                        </rules>
                    </configuration>

                </plugin>
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <configuration>
                        <verbose>false</verbose>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifestEntries>
                                <Implementation-Version>${git.build.version}-${git.commit.id.abbrev}</Implementation-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                    <version>${maven.plugin.forbiddenapis.version}</version>
                    <configuration>
                        <bundledSignatures>
                            <bundledSignature>jdk-unsafe</bundledSignature>
                            <bundledSignature>jdk-deprecated</bundledSignature>
                            <bundledSignature>jdk-system-out</bundledSignature>
                            <bundledSignature>jdk-internal</bundledSignature>
                            <bundledSignature>jdk-non-portable</bundledSignature>
                            <bundledSignature>jdk-reflection</bundledSignature>
                        </bundledSignatures>
                        <failOnViolation>true</failOnViolation>
                        <targetVersion>${java.version}</targetVersion>
                        <testTargetVersion>${java.version}</testTargetVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${maven.plugin.owasp.version}</version>
                    <configuration>
                        <skip>true</skip>
                        <skipTestScope>true</skipTestScope>
                        <skipProvidedScope>true</skipProvidedScope>
                        <skipRuntimeScope>true</skipRuntimeScope>
                        <showSummary>false</showSummary>
                        <failOnError>true</failOnError>
                        <nvdApiKey>a05f1c1a-654f-4daf-be39-4d486e9a1a20</nvdApiKey>
                        <failBuildOnCVSS>0</failBuildOnCVSS>
                        <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                        <suppressionFile>owasp-suppression.xml</suppressionFile>
                        <archiveAnalyzerEnabled>true</archiveAnalyzerEnabled>
                        <artifactoryAnalyzerEnabled>false</artifactoryAnalyzerEnabled>
                        <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                        <autoconfAnalyzerEnabled>false</autoconfAnalyzerEnabled>
                        <bundleAuditAnalyzerEnabled>false</bundleAuditAnalyzerEnabled>
                        <centralAnalyzerEnabled>true</centralAnalyzerEnabled>
                        <cmakeAnalyzerEnabled>false</cmakeAnalyzerEnabled>
                        <cocoapodsAnalyzerEnabled>false</cocoapodsAnalyzerEnabled>
                        <composerAnalyzerEnabled>false</composerAnalyzerEnabled>
                        <cpanfileAnalyzerEnabled>false</cpanfileAnalyzerEnabled>
                        <dartAnalyzerEnabled>false</dartAnalyzerEnabled>
                        <enableExperimental>false</enableExperimental>
                        <enableRetired>false</enableRetired>
                        <golangDepEnabled>false</golangDepEnabled>
                        <golangModEnabled>false</golangModEnabled>
                        <jarAnalyzerEnabled>true</jarAnalyzerEnabled>
                        <knownExploitedEnabled>true</knownExploitedEnabled>
                        <mavenInstallAnalyzerEnabled>true</mavenInstallAnalyzerEnabled>
                        <mixAuditAnalyzerEnabled>false</mixAuditAnalyzerEnabled>
                        <msbuildAnalyzerEnabled>false</msbuildAnalyzerEnabled>
                        <nexusAnalyzerEnabled>false</nexusAnalyzerEnabled>
                        <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
                        <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                        <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
                        <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
                        <opensslAnalyzerEnabled>false</opensslAnalyzerEnabled>
                        <ossindexAnalyzerEnabled>true</ossindexAnalyzerEnabled>
                        <pipAnalyzerEnabled>false</pipAnalyzerEnabled>
                        <pipfileAnalyzerEnabled>false</pipfileAnalyzerEnabled>
                        <pnpmAuditAnalyzerEnabled>false</pnpmAuditAnalyzerEnabled>
                        <poetryAnalyzerEnabled>false</poetryAnalyzerEnabled>
                        <pyDistributionAnalyzerEnabled>false</pyDistributionAnalyzerEnabled>
                        <pyPackageAnalyzerEnabled>false</pyPackageAnalyzerEnabled>
                        <swiftPackageManagerAnalyzerEnabled>false</swiftPackageManagerAnalyzerEnabled>
                        <swiftPackageResolvedAnalyzerEnabled>false</swiftPackageResolvedAnalyzerEnabled>
                        <yarnAuditAnalyzerEnabled>false</yarnAuditAnalyzerEnabled>
                        <rubygemsAnalyzerEnabled>false</rubygemsAnalyzerEnabled>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <configuration>
                        <fail>true</fail>
                        <rules>
                            <requireFilesExist>
                                <files>
                                    <file>${project.basedir}/domain-dictionary.txt</file>
                                </files>
                            </requireFilesExist>
                            <requireFilesDontExist>
                                <files>
                                    <file>${project.build.directory}/spelling_check_result.txt</file>
                                </files>
                            </requireFilesDontExist>
                            <requireJavaVersion>
                                <version>${java.version}</version>
                            </requireJavaVersion>
                            <banDuplicatePomDependencyVersions/>
                            <bannedDependencies>
                                <excludes>
                                    <exclude>junit:junit</exclude>
                                    <exclude>junit:junit-dep</exclude>
                                </excludes>
                            </bannedDependencies>
                            <requireMavenVersion>
                                <version>3.6.3</version>
                            </requireMavenVersion>
                            <requireReleaseDeps/>
                        </rules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.danielflower.mavenplugins</groupId>
                    <artifactId>gitlog-maven-plugin</artifactId>
                    <version>${maven.plugin.gitlog.version}</version>
                    <configuration>
                        <generatePlainTextChangeLog>false</generatePlainTextChangeLog>
                        <generatAsciidocChangeLog>false</generatAsciidocChangeLog>
                        <generateSimpleHTMLChangeLog>false</generateSimpleHTMLChangeLog>
                        <mergeCommitFilter>true</mergeCommitFilter>
                        <excludeCommitsPattern>^(?!((\((fix|feat)\))|NOJIRA)).*$</excludeCommitsPattern>
                        <showCommiter>false</showCommiter>
                        <outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
                        <fullGitMessage>false</fullGitMessage>
                        <dateFormat>yyyyMMdd'T'HH:mm:ss.SSSZ</dateFormat>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!--            Validate -->
            <plugin>
                <groupId>org.ec4j.maven</groupId>
                <artifactId>editorconfig-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-validate-editorconfig-format</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.tomxiong</groupId>
                <artifactId>spell-check-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-validate-spell-check-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-validate-enforcer-enforce</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <executions>
                    <execution>
                        <id>on-validate-dependency-check-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Initialize -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-initialize-jacoco-prepare-arguments</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>on-test-jacoco-check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Generate resources-->
            <plugin>
                <groupId>com.github.danielflower.mavenplugins</groupId>
                <artifactId>gitlog-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-generate-resources-gitlog-generate</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Generate source -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-generate-resources-git-commit-id-revision</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--             Compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <implicit>class</implicit>
                    <failOnWarning>true</failOnWarning>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>--enable-preview</compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${project.parent.version}</version>
                        </path>
                        <path>
                            <groupId>org.hibernate.orm</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${error.prone.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
                <executions>
                    <execution>
                        <id>on-compile-forbiddenapis-check</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-compile-spotbugs-check</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-compile-resources-pmd-check</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Process classes -->
            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>on-process-classes-hibernate-enhance-enhance</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <executions>
                    <execution>
                        <id>on-test-pitest-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>${maven.plugin.pitest.goal}</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <outputDirectory>${jar.output.directory}</outputDirectory>
                    <excludeDevtools>true</excludeDevtools>
                    <optimizedLaunch>true</optimizedLaunch>
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                </configuration>
            </plugin>

            <!--            Integration test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <groups>it</groups>
                    <argLine>-XX:+EnableDynamicAgentLoading -Xshare:off</argLine>
                    <parallel>all</parallel>
                    <threadCountSuites>10</threadCountSuites>
                    <perCoreThreadCount>true</perCoreThreadCount>
                </configuration>
            </plugin>

            <!--            No phase -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>